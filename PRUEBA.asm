.MODEL SMALL
.STACK 100H

.DATA
x DW 90
y DW 70
a DW 5
MSG1 DB 10, 13,'Luis', '$'
MSG2 DB 10, 13,'Daniel', '$'

.CODE
MAIN PROC

MOV AX, @data
MOV DS, AX

MOV BX, x
PUSH BX
MOV AX, 4
POP BX
ADD AX, BX
MOV BX, 2
PUSH BX
MOV AX, AX
POP BX
IMUL BX
MOV BX, AX
PUSH BX
MOV AX, a
POP BX
ADD AX, BX
MOV BX, AX
PUSH BX
MOV AX, a
POP BX
ADD AX, BX
MOV y, AX
MOV AX, y
CALL IMPRIMIR_NUMERO

MOV BX, x
PUSH BX
MOV AX, 4
POP BX
ADD AX, BX
MOV BX, 2
PUSH BX
MOV AX, AX
POP BX
IMUL BX
MOV BX, AX
PUSH BX
MOV AX, a
POP BX
ADD AX, BX
PUSH AX
MOV BX, 200
PUSH BX
MOV AX, a
POP BX
ADD AX, BX
MOV BX, a
PUSH BX
MOV AX, AX
POP BX
ADD AX, BX
PUSH AX
POP BX
POP AX
CMP AX, BX
JL  LABEL_0
JMP ELSELABEL_0

LABEL_0:
MOV x, 3
LEA DX, MSG1
CALL MOSTRAR_STRING
JMP FIN_0

ELSELABEL_0:
MOV x, 6
LEA DX, MSG2
CALL MOSTRAR_STRING

FIN_0:
MOV AX, x
CALL IMPRIMIR_NUMERO

MOV AH, 4Ch
INT 21h
MAIN ENDP

IMPRIMIR_NUMERO PROC
    PUSH AX
    PUSH BX
    PUSH CX
    PUSH DX
    
    MOV CX, 0      
    MOV BX, 10     

OBTENER_DIGITOS:
    MOV DX, 0      
    DIV BX         
    ADD DL, 30H    
    PUSH DX        
    INC CX         
    TEST AX, AX    
    JNZ OBTENER_DIGITOS

MOSTRAR_DIGITOS:
    POP DX         
    MOV AH, 02h    
    INT 21h        
    LOOP MOSTRAR_DIGITOS 

    POP DX
    POP CX
    POP BX
    POP AX
    RET
    IMPRIMIR_NUMERO ENDP
MOSTRAR_STRING PROC
    MOV AH, 09h      
    INT 21h          
    RET              
    MOSTRAR_STRING ENDP
END MAIN
